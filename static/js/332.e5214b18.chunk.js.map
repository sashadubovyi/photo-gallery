{"version":3,"file":"static/js/332.e5214b18.chunk.js","mappings":"4RACA,GAAgB,gBAAkB,oCAAoC,UAAY,8BAA8B,eAAiB,mCAAmC,eAAiB,mCAAmC,aAAe,iCAAiC,aAAe,iCAAiC,IAAM,wBAAwB,SAAW,6BAA6B,iBAAmB,qCAAqC,WAAa,gC,4BCkB7bA,GAAMC,EAAAA,EAAAA,IATW,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAIHC,GAAUC,EAAAA,EAAAA,IAAWT,GAErBU,EAAgB,CAAC,OAAQ,UAAW,SAAU,QAEvCC,EAAU,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACrB,SAAAA,EAAYK,GAAQ,IAADC,EAOf,OAPeC,EAAAA,EAAAA,GAAA,KAAAP,IACjBM,EAAAH,EAAAK,KAAA,KAAMH,IACDI,MAAQ,CACXC,cAAe,GACfC,eAAgB,EAChBC,kBAAmB,GACnBC,eAAgBd,EAAc,IAC9BO,CACJ,CAiJC,OAjJAQ,EAAAA,EAAAA,GAAAd,EAAA,EAAAe,IAAA,WAAAC,MAED,SAASC,GAAQ,IAADC,EAAA,KACRR,EAAgBO,EAAME,OAAOC,MAGnC,GAFAC,KAAKC,SAAS,CAAEZ,cAAAA,IAEZA,EAAca,OAAS,EAAG,CAC5B,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAACC,GACf,IAAMf,EAAoBgB,MAAMC,KAAKnB,GAAeoB,KAAI,SAACC,GAAI,OAC3DC,IAAIC,gBAAgBF,EAAK,IAG3Bb,EAAKI,SAAS,CAAEV,kBAAAA,GAClB,EAEAY,EAAOU,cAAcxB,EAAc,GACrC,CACF,GAAC,CAAAK,IAAA,qBAAAC,MAED,SAAmBC,GACjBI,KAAKC,SAAS,CAAET,eAAgBI,EAAME,OAAOH,OAC/C,GAAC,CAAAD,IAAA,eAAAC,MAAA,eAAAmB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAC,IAAA,IAAAC,EAAA7B,EAAAG,EAAA2B,EAAA5B,EAAA6B,EAAA,YAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACuC,GADvCL,EAC4ClB,KAAKZ,MAAvCC,EAAa6B,EAAb7B,cAAeG,EAAc0B,EAAd1B,eAEM,IAAzBH,EAAca,OAAY,CAAAmB,EAAAE,KAAA,QACO,OAAnCC,QAAQC,MAAM,2FAAqBJ,EAAAK,OAAA,iBA+BnC,OA3BIP,EAAiBZ,MAAMC,KAAKnB,GAAeoB,KAAI,SAACC,GACpD,IAAMiB,GAAaC,EAAAA,EAAAA,IAAIpD,EAAQ,UAADqD,OAAYrC,EAAc,KAAAqC,OAAInB,EAAKoB,OAC3DC,GAAaC,EAAAA,EAAAA,IAAqBL,EAAYjB,GAEpD,OAAO,IAAIuB,SAAQ,SAACC,EAASC,GAC3BJ,EAAWK,GACT,iBACA,SAACC,GACC,IAAMC,EAAWC,KAAKC,MACnBH,EAASI,iBAAmBJ,EAASK,WAAc,KAEtDtB,EAAKnB,SAAS,CAAEX,eAAgBgD,GAClC,IACA,SAACb,GACCD,QAAQC,MAAM,sJAA+BA,GAC7CU,EAAOV,EACT,IACA,YACEkB,EAAAA,EAAAA,IAAeZ,EAAWM,SAAST,KAChCgB,MAAK,SAACC,GACLrB,QAAQsB,IAAI,0IAA6BD,GACzCX,EAAQW,EACV,IACCE,OAAM,SAACtB,GAAK,OAAKU,EAAOV,EAAM,GACnC,GAEJ,GACF,IAAEJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGgCU,QAAQe,IAAI7B,GAAgB,KAAD,EAArD5B,EAAiB8B,EAAA4B,KACvBjD,KAAKC,SAAS,CACZV,kBAAAA,EACAD,eAAgB,EAChBD,cAAe,KACdgC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA6B,GAAA7B,EAAA,SAEHG,QAAQC,MAAM,4JAA8BJ,EAAA6B,IAAS,yBAAA7B,EAAA8B,OAAA,GAAAlC,EAAA,mBAExD,yBAAAH,EAAAsC,MAAA,KAAAC,UAAA,EAjDA,IAiDA,CAAA3D,IAAA,SAAAC,MAED,WAAU,IAAD2D,EAAA,KACPC,EAA8DvD,KAAKZ,MAA3DE,EAAciE,EAAdjE,eAAgBC,EAAiBgE,EAAjBhE,kBAAmBC,EAAc+D,EAAd/D,eAE3C,OACEgE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,gBAAkBH,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,gBAChBL,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLF,UAAWC,EAAAA,UACXE,GAAG,UACHC,SAAU,SAACpE,GAAK,OAAK0D,EAAKW,SAASrE,EAAM,EACzCsE,OAAO,mCACPtC,IAAK5B,KAAKmE,aACVC,UAAQ,KAEVZ,EAAAA,EAAAA,KAAA,SAAOa,QAAQ,UAASX,SACQ,IAA7BnE,EAAkBW,QACjBsD,EAAAA,EAAAA,KAAA,KAAAE,SAAG,MAEHnE,EAAkBkB,KAAI,SAAC6D,EAAKC,GAAK,OAC/BZ,EAAAA,EAAAA,MAAA,OAAiBC,UAAWC,EAAAA,eAAiBH,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OACEI,UAAWC,EAAAA,WACXW,IAAKF,EACLG,IAAG,iEAAA5C,OAAiB0C,EAAQ,MAE9Bf,EAAAA,EAAAA,KAAA,UACEI,UAAWC,EAAAA,aACXa,QAAS,WACP,IAAMC,GAASC,EAAAA,EAAAA,GAAOrF,GACtBoF,EAAUE,OAAON,EAAO,GACxBjB,EAAKrD,SAAS,CAAEV,kBAAmBoF,GACrC,EAAEjB,SACH,QAbOa,EAgBJ,OAKZf,EAAAA,EAAAA,KAAA,QAAMI,UAAWC,EAAAA,YAEjBL,EAAAA,EAAAA,KAAA,UACE7D,MAAOH,EACPwE,SAAU,SAAC1D,GAAC,OAAKgD,EAAKwB,mBAAmBxE,EAAE,EAACoD,SAE3ChF,EAAc+B,KAAI,SAACsE,GAAM,OACxBvB,EAAAA,EAAAA,KAAA,UAAqB7D,MAAOoF,EAAOrB,SAChCqB,GADUA,EAEJ,OAIbvB,EAAAA,EAAAA,KAAA,UACEI,UAAWC,EAAAA,eACXa,QAAS,kBAAMpB,EAAK0B,cAAc,EAACtB,SACpC,iGAGDF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,IAAMH,UACpBF,EAAAA,EAAAA,KAAA,OACEI,UAAWC,EAAAA,SACXoB,MAAO,CAAEC,MAAM,GAADrD,OAAKvC,EAAc,WAGrCqE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,iBAAmBH,SAAA,CAAEpE,EAAe,WAI5D,KAACX,CAAA,CA1JoB,CAASwG,EAAAA,WA6JhC,G","sources":["webpack://photo-gallery/./src/components/AdminPanel/AdminPanel.module.scss?9baa","components/AdminPanel/AdminPanel.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"uploadContainer\":\"AdminPanel_uploadContainer__ZuZh9\",\"inputFile\":\"AdminPanel_inputFile__RkNmq\",\"uploadPhotoBtn\":\"AdminPanel_uploadPhotoBtn__yoLY3\",\"imageContainer\":\"AdminPanel_imageContainer__r5CBl\",\"deleteButton\":\"AdminPanel_deleteButton__fQCqY\",\"chooseFolder\":\"AdminPanel_chooseFolder__gE4yU\",\"bar\":\"AdminPanel_bar__Dwzrz\",\"progress\":\"AdminPanel_progress__PSJ3e\",\"uploadPercentage\":\"AdminPanel_uploadPercentage__tyr5H\",\"imageSmall\":\"AdminPanel_imageSmall__1MYou\"};","import React, { Component } from \"react\";\nimport s from \"./AdminPanel.module.scss\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBV36jpX-P4riejmVYQlexhyen4DEijUyU\",\n  authDomain: \"photo-gallery-478c0.firebaseapp.com\",\n  projectId: \"photo-gallery-478c0\",\n  storageBucket: \"photo-gallery-478c0.appspot.com\",\n  messagingSenderId: \"948924880062\",\n  appId: \"1:948924880062:web:1458bd90eacf61bedefaef\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage(app);\n\nconst folderOptions = [\"solo\", \"wedings\", \"family\", \"kids\"];\n\nexport class AdminPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFiles: [],\n      uploadProgress: 0,\n      uploadedImageUrls: [],\n      selectedFolder: folderOptions[0],\n    };\n  }\n\n  getFiles(event) {\n    const selectedFiles = event.target.files;\n    this.setState({ selectedFiles });\n\n    if (selectedFiles.length > 0) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const uploadedImageUrls = Array.from(selectedFiles).map((file) =>\n          URL.createObjectURL(file)\n        );\n\n        this.setState({ uploadedImageUrls });\n      };\n\n      reader.readAsDataURL(selectedFiles[0]);\n    }\n  }\n\n  handleFolderChange(event) {\n    this.setState({ selectedFolder: event.target.value });\n  }\n\n  async uploadImages() {\n    const { selectedFiles, selectedFolder } = this.state;\n\n    if (selectedFiles.length === 0) {\n      console.error(\"Файли не вибрані!\");\n      return;\n    }\n\n    const uploadPromises = Array.from(selectedFiles).map((file) => {\n      const storageRef = ref(storage, `images/${selectedFolder}/${file.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      return new Promise((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            const progress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            this.setState({ uploadProgress: progress });\n          },\n          (error) => {\n            console.error(\"Помилка завантаження файлу:\", error);\n            reject(error);\n          },\n          () => {\n            getDownloadURL(uploadTask.snapshot.ref)\n              .then((downloadURL) => {\n                console.log(\"Файл доступний за адресою\", downloadURL);\n                resolve(downloadURL);\n              })\n              .catch((error) => reject(error));\n          }\n        );\n      });\n    });\n\n    try {\n      const uploadedImageUrls = await Promise.all(uploadPromises);\n      this.setState({\n        uploadedImageUrls,\n        uploadProgress: 0,\n        selectedFiles: [], // Забираємо вибрані файли після завантаження\n      });\n    } catch (error) {\n      console.error(\"Помилка завантаження файлів:\", error);\n    }\n  }\n\n  render() {\n    const { uploadProgress, uploadedImageUrls, selectedFolder } = this.state;\n\n    return (\n      <>\n        <div className={s.uploadContainer}>\n          <div className={s.folderSelect}></div>\n          <input\n            type=\"file\"\n            className={s.inputFile}\n            id=\"fileInp\"\n            onChange={(event) => this.getFiles(event)}\n            accept=\"image/png, image/jpeg, image/jpg\"\n            ref={this.fileInputRef}\n            multiple\n          />\n          <label htmlFor=\"fileInp\">\n            {uploadedImageUrls.length === 0 ? (\n              <p>+</p>\n            ) : (\n              uploadedImageUrls.map((url, index) => (\n                <div key={index} className={s.imageContainer}>\n                  <img\n                    className={s.imageSmall}\n                    src={url}\n                    alt={`Обране фото ${index + 1}`}\n                  />\n                  <button\n                    className={s.deleteButton}\n                    onClick={() => {\n                      const newImages = [...uploadedImageUrls];\n                      newImages.splice(index, 1);\n                      this.setState({ uploadedImageUrls: newImages });\n                    }}\n                  >\n                    x\n                  </button>\n                </div>\n              ))\n            )}\n          </label>\n\n          <span className={s.fileText}></span>\n\n          <select\n            value={selectedFolder}\n            onChange={(e) => this.handleFolderChange(e)}\n          >\n            {folderOptions.map((folder) => (\n              <option key={folder} value={folder}>\n                {folder}\n              </option>\n            ))}\n          </select>\n\n          <button\n            className={s.uploadPhotoBtn}\n            onClick={() => this.uploadImages()}\n          >\n            ЗАВАНТАЖИТИ ФОТО\n          </button>\n          <div className={s.bar}>\n            <div\n              className={s.progress}\n              style={{ width: `${uploadProgress}%` }}\n            ></div>\n          </div>\n          <div className={s.uploadPercentage}>{uploadProgress}%</div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AdminPanel;\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","folderOptions","AdminPanel","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","selectedFiles","uploadProgress","uploadedImageUrls","selectedFolder","_createClass","key","value","event","_this2","target","files","this","setState","length","reader","FileReader","onload","e","Array","from","map","file","URL","createObjectURL","readAsDataURL","_uploadImages","_asyncToGenerator","_regeneratorRuntime","_callee","_this$state","uploadPromises","_this3","_context","prev","next","console","error","abrupt","storageRef","ref","concat","name","uploadTask","uploadBytesResumable","Promise","resolve","reject","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","log","catch","all","sent","t0","stop","apply","arguments","_this4","_this$state2","_jsx","_Fragment","children","_jsxs","className","s","type","id","onChange","getFiles","accept","fileInputRef","multiple","htmlFor","url","index","src","alt","onClick","newImages","_toConsumableArray","splice","handleFolderChange","folder","uploadImages","style","width","Component"],"sourceRoot":""}